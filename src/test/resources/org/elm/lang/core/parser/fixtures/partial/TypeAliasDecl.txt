Elm File
  ElmTypeAliasDeclaration(TYPE_ALIAS_DECLARATION)
    PsiElement(TYPE)('type')
    PsiWhiteSpace(' ')
    PsiElement(ALIAS)('alias')
    PsiWhiteSpace(' ')
    PsiElement(UPPER_CASE_IDENTIFIER)('Blah')
    PsiErrorElement:EQ or LOWER_CASE_IDENTIFIER expected, got '['
      <empty list>
  PsiWhiteSpace(' ')
  PsiElement(LEFT_SQUARE_BRACKET)('[')
  PsiElement(LOWER_CASE_IDENTIFIER)('garbage')
  PsiElement(RIGHT_SQUARE_BRACKET)(']')
  PsiWhiteSpace('\n')
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmTypeAliasDeclaration(TYPE_ALIAS_DECLARATION)
    PsiElement(TYPE)('type')
    PsiWhiteSpace(' ')
    PsiElement(ALIAS)('alias')
    PsiWhiteSpace(' ')
    PsiElement(UPPER_CASE_IDENTIFIER)('Blah')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiErrorElement:<type ref> expected, got 'if'
      <empty list>
  PsiWhiteSpace(' ')
  PsiElement(IF)('if')
  PsiWhiteSpace(' ')
  PsiElement(NUMBER_LITERAL)('0')
  PsiWhiteSpace(' ')
  PsiElement(THEN)('then')
  PsiWhiteSpace(' ')
  PsiElement(NUMBER_LITERAL)('1')
  PsiWhiteSpace(' ')
  PsiElement(ELSE)('else')
  PsiWhiteSpace(' ')
  PsiElement(NUMBER_LITERAL)('2')
  PsiWhiteSpace('\n')
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmTypeAliasDeclaration(TYPE_ALIAS_DECLARATION)
    PsiElement(TYPE)('type')
    PsiWhiteSpace(' ')
    PsiElement(ALIAS)('alias')
    PsiWhiteSpace(' ')
    PsiElement(UPPER_CASE_IDENTIFIER)('Blah')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmTypeRef(TYPE_REF)
      ElmUpperPathTypeRef(UPPER_PATH_TYPE_REF)
        ElmUpperCaseQID(UPPER_CASE_QID)
          PsiElement(UPPER_CASE_IDENTIFIER)('String')
  PsiWhiteSpace(' ')
  PsiElement(LEFT_BRACE)('{')
  PsiWhiteSpace(' ')
  PsiElement(LOWER_CASE_IDENTIFIER)('garbage')
  PsiWhiteSpace(' ')
  PsiErrorElement:COLON or PIPE expected, got '}'
    PsiElement(RIGHT_BRACE)('}')