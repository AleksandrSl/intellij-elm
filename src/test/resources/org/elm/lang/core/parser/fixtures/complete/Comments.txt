Elm File
  PsiComment(LINE_COMMENT)('-- this is a line comment')
  PsiWhiteSpace('\n')
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmValueDeclarationImpl(VALUE_DECLARATION)
    ElmPatternImpl(PATTERN)
      ElmLowerCaseIdImpl(LOWER_CASE_ID)
        PsiElement(LOWER_CASE_IDENTIFIER)('n')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpressionImpl(EXPRESSION)
      ElmListOfOperandsImpl(LIST_OF_OPERANDS)
        PsiElement(NUMBER_LITERAL)('42')
  PsiWhiteSpace(' ')
  PsiComment(LINE_COMMENT)('-- this is also a line comment')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiComment(START_COMMENT)('{-')
  PsiComment(COMMENT_CONTENT)(' this is a block comment.\nIt can span multiple lines\n')
  PsiComment(END_COMMENT)('-}')
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmValueDeclarationImpl(VALUE_DECLARATION)
    ElmPatternImpl(PATTERN)
      ElmLowerCaseIdImpl(LOWER_CASE_ID)
        PsiElement(LOWER_CASE_IDENTIFIER)('foo')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpressionImpl(EXPRESSION)
      ElmListOfOperandsImpl(LIST_OF_OPERANDS)
        PsiElement(NUMBER_LITERAL)('42')
  PsiWhiteSpace('\n')
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiComment(START_COMMENT)('{-')
  PsiComment(COMMENT_CONTENT)(' block comments can also be on a single line ')
  PsiComment(END_COMMENT)('-}')
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmValueDeclarationImpl(VALUE_DECLARATION)
    ElmPatternImpl(PATTERN)
      ElmLowerCaseIdImpl(LOWER_CASE_ID)
        PsiElement(LOWER_CASE_IDENTIFIER)('bar')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpressionImpl(EXPRESSION)
      ElmListOfOperandsImpl(LIST_OF_OPERANDS)
        PsiElement(NUMBER_LITERAL)('99')
  PsiWhiteSpace('\n')
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiComment(START_COMMENT)('{-')
  PsiComment(COMMENT_CONTENT)(' block comments can be\n    ')
  PsiComment(COMMENT_CONTENT)('{-')
  PsiComment(COMMENT_CONTENT)(' nested ')
  PsiComment(COMMENT_CONTENT)('-}')
  PsiComment(COMMENT_CONTENT)('\nlike this\n')
  PsiComment(END_COMMENT)('-}')
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmValueDeclarationImpl(VALUE_DECLARATION)
    ElmPatternImpl(PATTERN)
      ElmLowerCaseIdImpl(LOWER_CASE_ID)
        PsiElement(LOWER_CASE_IDENTIFIER)('baz')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpressionImpl(EXPRESSION)
      ElmListOfOperandsImpl(LIST_OF_OPERANDS)
        PsiElement(NUMBER_LITERAL)('0')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiComment(START_DOC_COMMENT)('{-|')
  PsiComment(COMMENT_CONTENT)(' this is a doc comment.\nIt can span multiple lines\n')
  PsiComment(END_COMMENT)('-}')
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmValueDeclarationImpl(VALUE_DECLARATION)
    ElmPatternImpl(PATTERN)
      ElmLowerCaseIdImpl(LOWER_CASE_ID)
        PsiElement(LOWER_CASE_IDENTIFIER)('foo2')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpressionImpl(EXPRESSION)
      ElmListOfOperandsImpl(LIST_OF_OPERANDS)
        PsiElement(NUMBER_LITERAL)('42')
  PsiWhiteSpace('\n')
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiComment(START_DOC_COMMENT)('{-|')
  PsiComment(COMMENT_CONTENT)(' doc comments can also be on a single line ')
  PsiComment(END_COMMENT)('-}')
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmValueDeclarationImpl(VALUE_DECLARATION)
    ElmPatternImpl(PATTERN)
      ElmLowerCaseIdImpl(LOWER_CASE_ID)
        PsiElement(LOWER_CASE_IDENTIFIER)('bar2')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpressionImpl(EXPRESSION)
      ElmListOfOperandsImpl(LIST_OF_OPERANDS)
        PsiElement(NUMBER_LITERAL)('99')
  PsiWhiteSpace('\n')
  PsiElement(VIRTUAL_END_DECL)('\n')
  PsiComment(START_DOC_COMMENT)('{-|')
  PsiComment(COMMENT_CONTENT)(' doc comments can contain block comments\n    ')
  PsiComment(COMMENT_CONTENT)('{-')
  PsiComment(COMMENT_CONTENT)(' nested ')
  PsiComment(COMMENT_CONTENT)('-}')
  PsiComment(COMMENT_CONTENT)('\nand everything is still ok\n')
  PsiComment(END_COMMENT)('-}')
  PsiElement(VIRTUAL_END_DECL)('\n')
  ElmValueDeclarationImpl(VALUE_DECLARATION)
    ElmPatternImpl(PATTERN)
      ElmLowerCaseIdImpl(LOWER_CASE_ID)
        PsiElement(LOWER_CASE_IDENTIFIER)('baz2')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    ElmExpressionImpl(EXPRESSION)
      ElmListOfOperandsImpl(LIST_OF_OPERANDS)
        PsiElement(NUMBER_LITERAL)('0')